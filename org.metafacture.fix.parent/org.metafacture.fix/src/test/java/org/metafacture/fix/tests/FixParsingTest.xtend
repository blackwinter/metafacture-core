/*
 * generated by Xtext 2.17.0
 */
package org.metafacture.fix.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.metafacture.fix.fix.Fix

@ExtendWith(InjectionExtension)
@InjectWith(FixInjectorProvider)
class FixParsingTest {
	@Inject
	ParseHelper<Fix> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			import java.util.List
			 
			package my.model {
			 
			    entity Person {
			        name: String
			        firstName: String
			        friends: List<Person>
			        address : Address
			        op getFullName() : String {
			            return firstName + " " + name;
			        }
			        
			        op getFriendsSortedByFullName() : List<Person> {
			            return friends.sortBy[ f | f.fullName ]
			        }
			    }
			    
			    entity Address {
			        street: String
			        zip: String
			        city: String
			    }
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
