/*
 * generated by Xtext 2.17.0
 */
package org.metafacture.fix.jvmmodel

import org.eclipse.xtext.xbase.jvmmodel.AbstractModelInferrer
import org.eclipse.xtext.xbase.jvmmodel.IJvmDeclaredTypeAcceptor
import org.metafacture.fix.fix.Do
import org.metafacture.fix.fix.Expression
import org.metafacture.fix.fix.If
import org.metafacture.fix.fix.MethodCall

class FixJvmModelInferrer extends AbstractModelInferrer {

	def dispatch void infer(Expression expression, IJvmDeclaredTypeAcceptor acceptor, boolean isPrelinkingPhase) {
		switch expression {
			If: {
				println("if: " + expression)
				for (ifExpression : expression.elements) {
					this.infer(ifExpression, acceptor, isPrelinkingPhase)
				}
				if (expression.elseIf !== null) {
					println("else if: " + expression.elseIf)
					for (elseIfExpression : expression.elseIf.elements) {
						this.infer(elseIfExpression, acceptor, isPrelinkingPhase)
					}
				}
				if (expression.^else !== null) {
					println("else: " + expression.elseIf)
					for (elseExpression : expression.^else.elements) {
						this.infer(elseExpression, acceptor, isPrelinkingPhase)
					}
				}
			}
			Do: {
				println("do: " + expression)
				for (doExpression : expression.elements) {
					this.infer(doExpression, acceptor, isPrelinkingPhase)
				}
			}
			MethodCall: {
				println("method call: " + expression)
			}
		}
	}

}
